(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[871],{6900:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/getting-started/define-tasks",function(){return t(2357)}])},6408:function(e,s,t){"use strict";var n=t(1527),i=t(3886);let a={logo:(0,n.jsx)("h1",{style:{fontSize:24,fontWeight:600},children:"Atros"}),project:{link:"https://github.com/kodkafa/atros/"},docsRepositoryBase:"https://github.com/kodkafa/atros",footer:{text:"Atros - Automation for the Rest of Us"},useNextSeoProps(){let{asPath:e}=(0,i.useRouter)();if("/"!==e)return{titleTemplate:"%s"}}};s.Z=a},2357:function(e,s,t){"use strict";t.r(s),t.d(s,{default:function(){return o.Z}});var n=t(1527),i=t(2093),a=t(2691),r=t(6408);t(9054);var l=t(313);t(6484);var o=t(9181);function c(e){let s=Object.assign({h1:"h1",p:"p",code:"code",h3:"h3",pre:"pre",span:"span",h4:"h4",h5:"h5",ul:"ul",li:"li",strong:"strong"},(0,l.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{children:"Define Tasks"}),"\n",(0,n.jsxs)(s.p,{children:["We have two different types of tasks: ",(0,n.jsx)(s.code,{children:"shell"})," and ",(0,n.jsx)(s.code,{children:"install"}),". Both use a ",(0,n.jsx)(s.code,{children:"type"})," field to define their type, and the other fields depend on the type of your task. Let's see how to define both of these kinds of tasks in action!"]}),"\n",(0,n.jsx)(s.h3,{id:"-shell-task",children:"\uD83D\uDCDF Shell Task"}),"\n",(0,n.jsxs)(s.p,{children:["Shell tasks are the most primal ones. They only require a ",(0,n.jsx)(s.code,{children:"cmd"})," field, and when you run that task, Atros tries to execute the value of this field you provided using the ",(0,n.jsx)(s.code,{children:"sh"})," command."]}),"\n",(0,n.jsx)(s.pre,{"data-language":"typescript","data-theme":"default",children:(0,n.jsxs)(s.code,{"data-language":"typescript","data-theme":"default",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  type"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"shell"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  cmd"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"\"echo 'Hey, welcome to Atros'\""}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,n.jsxs)(s.p,{children:["This task will run ",(0,n.jsx)(s.code,{children:"echo 'Hey, welcome to Atros'"})," on your system using ",(0,n.jsx)(s.code,{children:"sh"})]}),"\n",(0,n.jsx)(s.h3,{id:"-install-task",children:"\uD83D\uDCE5 Install Task"}),"\n",(0,n.jsxs)(s.p,{children:["On the other hand, while still being simple to define, install tasks have more functionality than a simple task. It needs to find your system's default package manager and check if you have a special system or parameter definition for any package. We'll talk about all of these functionalities, but let's start easy. An install task has 3 fields: ",(0,n.jsx)(s.code,{children:"type"}),", ",(0,n.jsx)(s.code,{children:"packages"}),", and ",(0,n.jsx)(s.code,{children:"parameters"})," (parameters are optional) With this in mind, we can define a simple task that installs Neovim."]}),"\n",(0,n.jsx)(s.pre,{"data-language":"typescript","data-theme":"default",children:(0,n.jsxs)(s.code,{"data-language":"typescript","data-theme":"default",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  type"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"install"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  packages"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" ["}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"neovim"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"]"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  params"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" []"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"// optional"})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,n.jsxs)(s.p,{children:["And done! Now running ",(0,n.jsx)(s.code,{children:"atros run"})," will install Neovim in your system. You might ask though, why should I use an ",(0,n.jsx)(s.code,{children:"install"})," task when I already have ",(0,n.jsx)(s.code,{children:"shell"}),"? The answer is out-of-the-box cross-platform support. As we mentioned above, an install task finds your system before it gets executed, so in MacOS, this task gets executed as ",(0,n.jsx)(s.code,{children:"brew install neovim"}),", while in Debian the same task will become ",(0,n.jsx)(s.code,{children:"apt install neovim"})]}),"\n",(0,n.jsx)(s.h4,{id:"package-manager-parameters",children:"Package Manager Parameters"}),"\n",(0,n.jsxs)(s.p,{children:["Of course, this is not the only advantage of an install task. Giving a parameter to package managers gets much easier with install tasks, since they have a ",(0,n.jsx)(s.code,{children:"params"})," field that supports system-specific parameters, we'll later talk about system specificity."]}),"\n",(0,n.jsx)(s.pre,{"data-language":"typescript","data-theme":"default",children:(0,n.jsxs)(s.code,{"data-language":"typescript","data-theme":"default",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  type"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"install"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  packages"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" ["}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"neovide"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"]"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"// Remember the pre-defined parameters we imported earlier?"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"// Changed neovim to neovide for demonstrating cask"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  params"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" [cask]"})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,n.jsx)(s.h5,{id:"all-pre-defined-parameters",children:"All Pre-Defined Parameters"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["apt_get","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"System:"})," Debian Based"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"What it Does:"})," Runs ",(0,n.jsx)(s.code,{children:"apt-get"})," instead of ",(0,n.jsx)(s.code,{children:"apt"})]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["cask","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"System:"})," MacOS"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"What it Does:"})," Adds --cask parameter"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["yay","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"System:"})," Arch Based"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"What it Does:"})," Runs ",(0,n.jsx)(s.code,{children:"yay"})," instead of ",(0,n.jsx)(s.code,{children:"pacman"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"-specifying-system",children:"\uD83D\uDCBB Specifying System"}),"\n",(0,n.jsx)(s.p,{children:"But how do these parameters work system-specific? Well, the truth is parameters are not the only thing you can define a system to. In Atros, you can specify a system for each task, package, and of course, parameter. Using this, we can change the outcome of our tasks for each system that you can install and use Atros."}),"\n",(0,n.jsx)(s.p,{children:"We'll talk about this in-depth in the next chapter."})]})}e=t.hmd(e),(0,i.j)({Content:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,l.ah)(),e.components);return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)},nextraLayout:a.ZP,hot:e.hot,pageOpts:{filePath:"pages/getting-started/define-tasks.md",route:"/getting-started/define-tasks",frontMatter:{},pageMap:[{kind:"Meta",data:{index:"\uD83D\uDE80 Introduction","getting-started":"\uD83D\uDCAB Getting Started",contributing:"\uD83D\uDCAC Contributing"}},{kind:"MdxPage",name:"contributing",route:"/contributing"},{kind:"Folder",name:"getting-started",route:"/getting-started",children:[{kind:"Meta",data:{"first-steps":"\uD83D\uDC5F First Steps Into Atros","define-tasks":"✅ Define Tasks","specifying-system":"\uD83D\uDCBB Specifying System"}},{kind:"MdxPage",name:"define-tasks",route:"/getting-started/define-tasks"},{kind:"MdxPage",name:"first-steps",route:"/getting-started/first-steps"},{kind:"MdxPage",name:"specifying-system",route:"/getting-started/specifying-system"}]},{kind:"MdxPage",name:"index",route:"/"}],headings:[{depth:1,value:"Define Tasks",id:"define-tasks"},{depth:3,value:"\uD83D\uDCDF Shell Task",id:"-shell-task"},{depth:3,value:"\uD83D\uDCE5 Install Task",id:"-install-task"},{depth:4,value:"Package Manager Parameters",id:"package-manager-parameters"},{depth:5,value:"All Pre-Defined Parameters",id:"all-pre-defined-parameters"},{depth:3,value:"\uD83D\uDCBB Specifying System",id:"-specifying-system"}],timestamp:1738850265e3,flexsearch:{codeblocks:!0},title:"Define Tasks"},themeConfig:r.Z,pageNextRoute:"/getting-started/define-tasks",pageOptsChecksum:void 0,dynamicMetaModules:[]})}},function(e){e.O(0,[774,311,888,179],function(){return e(e.s=6900)}),_N_E=e.O()}]);